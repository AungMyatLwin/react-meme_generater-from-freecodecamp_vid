[{"C:\\Users\\zackc\\Documents\\memereact\\meme_generater\\src\\index.js":"1","C:\\Users\\zackc\\Documents\\memereact\\meme_generater\\src\\App.js":"2","C:\\Users\\zackc\\Documents\\memereact\\meme_generater\\src\\reportWebVitals.js":"3","C:\\Users\\zackc\\Documents\\memereact\\meme_generater\\src\\components\\Memegenerator.js":"4","C:\\Users\\zackc\\Documents\\memereact\\meme_generater\\src\\components\\Header.js":"5"},{"size":161,"mtime":1610551697617,"results":"6","hashOfConfig":"7"},{"size":322,"mtime":1610551318861,"results":"8","hashOfConfig":"7"},{"size":362,"mtime":499162500000,"results":"9","hashOfConfig":"7"},{"size":2018,"mtime":1610554650198,"results":"10","hashOfConfig":"7"},{"size":289,"mtime":1610551506489,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"1lxfy68",{"filePath":"15","messages":"16","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17","usedDeprecatedRules":"14"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22","usedDeprecatedRules":"14"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\zackc\\Documents\\memereact\\meme_generater\\src\\index.js",[],["25","26"],"C:\\Users\\zackc\\Documents\\memereact\\meme_generater\\src\\App.js",["27"],"import React,{Component} from \"react\"\nimport Memegenerator from \"./components/Memegenerator\"\nimport Header from \"./components/Header\"\n\nclass App extends Component{\n  constructor(){\n    super()\n  }\n  render()\n  {\n    return(\n      <div>\n        <Header/>\n        <Memegenerator/>\n      </div>\n    )\n  }\n}\nexport default App","C:\\Users\\zackc\\Documents\\memereact\\meme_generater\\src\\reportWebVitals.js",[],"C:\\Users\\zackc\\Documents\\memereact\\meme_generater\\src\\components\\Memegenerator.js",["28"],"import React from \"react\"\r\n\r\nclass Memegenerator extends React.Component{\r\n    constructor(){\r\n        super()\r\n        this.state={\r\n            top_text:\"\",\r\n            bottom_text:\"\",\r\n            random_image:\"http://i.imgflip.com/1bij.jpg\",\r\n            allMemeImg:[]\r\n\r\n        }\r\n        this.componentDidMount=this.componentDidMount.bind(this)\r\n        this.handleChange=this.handleChange.bind(this)\r\n        this.Gen=this.Gen.bind(this)\r\n        \r\n    }\r\n    componentDidMount(){\r\n        fetch('https://api.imgflip.com/get_memes')\r\n        .then(response=>response.json())\r\n        .then(response=>{\r\n            const {memes}=response.data\r\n            \r\n            this.setState({\r\n                allMemeImg:memes\r\n            })\r\n        })\r\n    }\r\n    handleChange(event){\r\n        const {name,value}=event.target\r\n        this.setState({\r\n            [name]:value\r\n        })\r\n        \r\n    }\r\n    Gen(event){\r\n        event.preventDefault()\r\n        const rand=Math.floor(Math.random() * this.state.allMemeImg.length)\r\n        const random_imageurl=this.state.allMemeImg[rand].url\r\n        this.setState({\r\n            random_image:random_imageurl\r\n        })\r\n    }\r\n    render(){\r\n        return(\r\n            <div>\r\n            <form className=\"meme-form\"  >\r\n                \r\n                <input name=\"top_text\" type=\"text\" value={this.state.top_text}  onChange={this.handleChange} />Top Text\r\n                <br/>\r\n                <input name=\"bottom_text\" type=\"text\" value={this.state.bottom_text} onChange={this.handleChange} />bottom Text\r\n                <br/>\r\n                <button onClick={this.Gen}>Gen</button>\r\n            </form>\r\n                <div className=\"meme\">\r\n                    <img src={this.state.random_image}/>\r\n                    <h2 className=\"top\">{this.state.top_text}</h2>       \r\n                    <h2 className=\"bottom\">{this.state.bottom_text}</h2>  \r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Memegenerator","C:\\Users\\zackc\\Documents\\memereact\\meme_generater\\src\\components\\Header.js",[],{"ruleId":"29","replacedBy":"30"},{"ruleId":"31","replacedBy":"32"},{"ruleId":"33","severity":1,"message":"34","line":6,"column":3,"nodeType":"35","messageId":"36","endLine":8,"endColumn":4},{"ruleId":"37","severity":1,"message":"38","line":56,"column":21,"nodeType":"39","endLine":56,"endColumn":57},"no-native-reassign",["40"],"no-negated-in-lhs",["41"],"no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]